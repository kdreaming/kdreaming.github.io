[{"title":"imgTest","date":"2017-02-12T13:07:51.000Z","path":"2017/02/12/imgTest/","text":"","tags":[]},{"title":"关于浮动","date":"2015-08-18T12:04:16.000Z","path":"2015/08/18/关于浮动/","text":"清除浮动什么是清除浮动 清除浮动 不是 把当前标签的浮动给清除了，而是清除当前元素旁边的浮动元素，但是当前元素又不能影响别人，所以就自己跑到下面去了 - -！ 为什么要清除浮动 在布局的时候我们经常希望某些内容能够水平排布，水平排布后，由于内部内容不确定，高度不能简单的给一个定值。而如果不给高度，子元素又都浮动了，父盒子就会因为没有子盒子的支撑而塌陷。 利用清除浮动的这个特性，我们可以给父元素中最后一个不浮动的盒子使用clear:both从而把父盒子的高度撑起来，并且能够根据内部内容的变化而改变高度。 清除浮动的方法1. 额外标签法123单独使用一个标签加上clear:both跑到浮动元素下面，从而消除子盒子浮动造成的父盒子塌陷 * 缺点：添加很多无意义的空标签，不符合结构与表现分离的原则，不利于后期维护 2. 父元素设置 overflow: hidden123给父元素设置属性overflow: hidden* 缺点：内容增多时候容易造成不会自动换行导致内容被隐藏掉，无法显示需要溢出的元素 3. 单伪元素1234567891011.clearfix:after &#123; content: ''; height: 0; visibility: hidden; overflow: hidden; display: block; clear: both;&#125;.clearfix &#123; *zoom: 1;/* IE67 */&#125; 4. 双伪元素123456789101112.clearfix:before, .clearfix:after &#123; content: \"\"; display: table;/*不是inline就行*/&#125;/*在有该类的元素内部元素的前面和后面添加元素*/.clearfix:after &#123; clear: both;&#125;/*只要after两侧有浮动元素，after就会跑到最下面，从而撑开带有该类名的父盒子*/.clearfix &#123; *zoom: 1; /* IE67 */&#125;","tags":[{"name":"html","slug":"html","permalink":"http://yoursite.com/tags/html/"},{"name":"清除浮动","slug":"清除浮动","permalink":"http://yoursite.com/tags/清除浮动/"}]},{"title":"git入门指南","date":"2014-02-05T13:09:32.000Z","path":"2014/02/05/git入门指南/","text":"基本使用 123git initgit loghexo generate --deploy","tags":[]}]